git入门
    1. 为什么学习git
        版本管理
        多人协作

    2. git的诞生
        2005年由林纳斯.本纳迪克特.托瓦兹 开发的

    3. git是什么
        分布式管理系统
            1. 记录版本信息
            2. 可以多人协作

    4. 集中式和分布式
        1. 集中式: 有中央服务器, 一旦断网, 不能工作, 版本信息都存在中央服务器
        2. 分布式: 没有真正意义上的服务器, 打的中央服务器只是用来多人交换代码的离线仍然可以工作

    5. git-bash中常用文件操作命令
        cd     切换目录
        pwd    查看当前目的具体路径
        ls     查看当前目录下的所有文件及文件夹   -a  查看隐藏目录
        mkdir  创建目录
        touch  创建一个文件
        rm     删除目录或文件                    -rf  删除当前目录下所有文件包括后代文件夹并且不提示
        cat    查看文件内容, 适用内容较少的文件
        less   查看文件内容, 使用内容较多的文件
        vi     编辑文件
            有两种模式
            输入i进入插入模式
            按esc退出插入模式, 回到命令模式
            :wq  保存并退出
            :q!  强制退出不保存

    6. git全局配置
        git config --global user.name "你的用户名"
        git config --global user.email "你的邮箱"
        //查看当前git用户名
        git config user.name

    7. 创建版本库
        git init        // 初始化git仓库
        git add 文件名
        git commit -m "提示信息"

    8. 状态查看
        git status       // 查看当前文件状态
        git daff 文件名   // 查看具体的就该内容

    9. 版本回退
        git reset --hard HEAD^      // 退回上一个版本
        git reset --hard commitID   // 退回到指定的版本
        git log                     // 查看历史版本信息
        got reflog                  // 控制台关闭过, 查看之前的提交信息

    10. 工作区和暂存区
        工作区: 就是本机电脑的目录
        暂存区: 存在于版本库, git add .  会将修改添加到暂存区
        git commit 将暂存区的修改添加得到master

    11. 管理修改
        git 管理的是文件修改, 而不是文件本身

    12. 撤销修改
        1. 修改文件后, 还有git add
            git checkout -- 文件名
        2. 修改文件后, 从暂存区回退到工作区:
            git reset HEAD 文件名
        3. 已经git commit :
            没有提交到远程仓库: 版本回退

    13. 删除文件
        git rm 文件名
            注意: 如果删除的文件从来没有添加版本库, 无法回复的

    14. 远程仓库
        1. gitHub
        2. 备份的代码
        3. 多人协作

    15. 本地git仓库和githUub仓库之间的传输协议
        1. ssh
            $ ssh-keygen -t rsa -c "your email@example.com" // 创建公钥秘钥

    16. 远程添加
        1. 创建远程仓库
        2. 创建仓库和本地仓库进行关联
            git remote add origin https://github.com/magicstf/learngit.gitHub
                =其中magicstf是你自己github账号的名称
        3. 将本地仓库的内容进行远程推送
            git push -u origin master

    17. 将本地仓库的内容推送到远程仓库
        git pash -u orgin master

    18. 仓远程仓库克隆
        1. 向创建远程仓库
        2. git clone 远程仓库的地址
        3. 在本地当前文件夹中会出现有一个和远程仓库同名的文件夹

    19. 分支管理
        1. 创建分支
            git checkout -b      // 想要创建的分支名
            git checkout 分支名   // 切换分支
            git branch           //  查看分支

    20. 创建与合并分支
        1. 创建分支
            git checkout -b "分支名"
        2. 切换到master分支
            git checkout master
        3. 合并分支
            git merge "分支名称"

    21. 解决冲突
        1. 使用vscode解决
        2. 删除分支:
            git branch -d "分支名称";

